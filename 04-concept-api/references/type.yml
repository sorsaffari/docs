methods:
  - method:
    common: &method-label-retrieve
      title: Retrieve label
      descriotion: Retrieves the unique label of the type.
      returns:
        - String
    java:
      <<: *method-label-retrieve
      method: type.label();
    javascript:
      <<: *method-label-retrieve
      method: await type.label();
    python:
      <<: *method-label-retrieve
      method: type.label()

  - method:
    common: &method-label-rename
      title: Rename label
      description: Renames the label of the type. The new label must remain unqiue.
      accepts:
        param:
          name: label
          description: The new label to be given to the type.
          type: String
          required: true
          default: N/A
    java:
      <<: *method-label-rename
      method: type.label(Label.of(String label));
      returns:
        - "[`Type`](/docs/concept-api/type?tab=java#type-methods) object"
    javascript:
      <<: *method-label-rename
      method: await type.label(label);
      returns:
        - "void"
    python:
      <<: *method-label-rename
      method: type.label(label)
      returns:
        - "[`Type`](/docs/concept-api/type?tab=python#type-methods) object"

  - method:
    common: &method-sup-retrieve
      title: Retrieve direct supertype
      description: Retrieves the most immidiate supertype of the type.
    java:
      <<: *method-sup-retrieve
      method: type.sup();
      returns:
        - "[`Type`](/docs/concept-api/type?tab=java#type-methods) object"
        - "`NULL`"
    javascript:
      <<: *method-sup-retrieve
      method: await type.sup();
      returns:
        - "[`Type`](/docs/concept-api/type?tab=javascript#type-methods) object"
        - "`null`"
    python:
      <<: *method-sup-retrieve
      method: type.sup()
      returns:
        - "[`Type`](/docs/concept-api/type?tab=python#type-methods) object"
        - "`None`"

  - method:
    common: &method-sup-reset
      title: Change direct supertype
      description: Changes the most immidiete supertype of the type.
      accepts:
        param:
          name: type
          description: The new type that the given type is to inherits.
          type: "[`EntityType`](/docs/concept-api/type#entitytype-methods) &#124; [`AttributeType`](/docs/concept-api/type#attributetype-methods) &#124; [`RelationType`](...)"
          required: true
          default: N/A
    # java:
    #   <<: *method-sup-reset
    #   method: type.sup(Type type);
    #   returns:
    #     - "[`Type`](/docs/concept-api/type?tab=java#type-methods) object"
    #     - "`null`"
    javascript:
      <<: *method-sup-reset
      method: await type.sup(type)
      returns:
        - "`void`"
    python:
      <<: *method-sup-reset
      method: type.sup(type)
      returns:
        - "[`Type`](/docs/concept-api/type?tab=python) object"
        - "`None`"

  - method:
    common: &method-sups
      title: Retrieve all supertypes
      description: Retrieves all supertypes of the type.
    java:
      <<: *method-sups
      method: type.sups();
      returns:
        - "Stream of [`Type`](/docs/concept-api/type?tab=java#type-methods) objects"
    javascript:
      <<: *method-sups
      method: await type.sups()
      returns:
        - "Iterator of [`Type`](/docs/concept-api/type?tab=java#type-methods) objects"
    python:
      <<: *method-sups
      method: type.sups()
      returns:
        - "Iterator of [`Type`](/docs/concept-api/type?tab=python#type-methods) objects"

  - method:
    common: &method-subs
      title: Retrieve all subtypes
      description: Retrieves all indirect subtypes of the type.
    java:
      <<: *method-subs
      method: type.subs();
      returns:
        - "Stream of [`Type`](/docs/concept-api/type?tab=java#type-methods) objects"
    javascript:
      <<: *method-subs
      method: await type.subs()
      returns:
        - "Iterator of [`Type`](/docs/concept-api/type?tab=nodejs#type-methods) objects"
    python:
      <<: *method-subs
      method: type.subs()
      returns:
        - "Iterator of [`Type`](/docs/concept-api/type?tab=python#type-methods) objects"

  - method:
    common: &method-isImplicit
      title: Check if type is implicit
      description: Checks if the type has been created, under the hood, by Grakn (i.e. `implicit`).
      returns:
        - "`boolean`"
    java:
      <<: *method-isImplicit
      method: type.isImplicit();
    javascript:
      <<: *method-isImplicit
      method: await type.isImplicit();
    python:
      <<: *method-isImplicit
      method: type.is_implicit()

  - method:
    common: &method-isAbstract-check
      title: Check if type is abstract
      description: Checks if the type is prevented from having data instances (i.e. `abstract`).
      returns:
        - "`boolean`"
    java:
      <<: *method-isAbstract-check
      method: type.isAbstract();
    javascript:
      <<: *method-isAbstract-check
      method: await type.isAbstract();
    python:
      <<: *method-isAbstract-check
      method: type.is_abstract()

  - method:
    common: &method-isAbstract-set
      title: Toggle abstraction
      description: Determines whether or not there can be instances of this type.
      accepts:
        param:
          name: abstract
          description: true to be abstracted and false to not.
          type: boolean
          required: true
          default: N/A
    java:
      <<: *method-isAbstract-set
      method: type.isAbstract(Boolean abstract);
      returns:
        - "[`Type`](/docs/concept-api/type?tab=java#type-methods) object"
    javascript:
      <<: *method-isAbstract-set
      method: await type.isAbstract(abstract);
      returns:
        - "`void`"
    python:
      <<: *method-isAbstract-set
      method: type.is_abstract(abstract)
      returns:
        - "[`Type`](/docs/concept-api/type?tab=python#type-methods) object"

  - method:
    common: &method-playing
      title: Retrieve roles
      description: Retrieves all direct and inherited roles that are allowed to be played by the instances of this type.
    java:
      <<: *method-playing
      method: type.playing();
      returns:
        - "Stream of [`Role`](/docs/concept-api/type?tab=java#role-methods) objects"
    javascript:
      <<: *method-playing
      method: await type.playing();
      returns:
        - "Iterator of [`Role`](/docs/concept-api/type?tab=javascript#role-methods) objects"
    python:
      <<: *method-playing
      method: type.playing()
      returns:
        - "Iterator of [`Role`](/docs/concept-api/type?tab=python#role-methods) objects"

  - method:
    common: &method-plays
      title: Add new role
      description: Allows the instances of this type to play the given role.
      accepts:
        param: &accepts-plays-role
          name: role
          description: The role to be played by the instances of this type.
          required: true
          default: N/A
    java:
      <<: *method-plays
      method: type.plays(Role role);
      accepts:
        param:
          <<: *accepts-plays-role
          type: "[`Role`](/docs/concept-api/type?tab=java#role-methods)"
      returns:
        - "[`Type`](/docs/concept-api/type?tab=java#type-methods) object"
    javascript:
      <<: *method-plays
      method: await type.plays(role);
      accepts:
        param:
          <<: *accepts-plays-role
          type: "[`Role`](/docs/concept-api/type?tab=javascript#role-methods)"
      returns:
        - "`void`"
    python:
      <<: *method-plays
      method: type.plays(role)
      accepts:
        param:
          <<: *accepts-plays-role
          type: "[`Role`](/docs/concept-api/type?tab=python#role-methods)"
      returns:
        - "[`Type`](/docs/concept-api/type?tab=python#type-methods) object"

  - method:
    common: &method-unplay
      title: Remove role
      description: Disallows the instances of this type from playing the given role.
      accepts:
        param: &accepts-unplay
          name: role
          description: The role to not be played by the instances of this type.
          required: true
          default: N/A
    java:
      <<: *method-unplay
      method: type.unplay(Role role);
      accepts:
        param:
          <<: *accepts-unplay
          type: "[`Role`](/docs/concept-api/type?tab=java#role-methods)"
      returns:
        - "[`Type`](/docs/concept-api/type?tab=java#type-methods) object"
    javascript:
      <<: *method-unplay
      method: await type.unplay(role);
      accepts:
        param:
          <<: *accepts-unplay
          type: "[`Role`](/docs/concept-api/type?tab=javascript#role-methods)"
      returns:
        - "`void`"
    python:
      <<: *method-unplay
      method: type.unplay(role)
      accepts:
        param:
          <<: *accepts-unplay
          type: "[`Role`](/docs/concept-api/type?tab=python#role-methods)"
      returns:
        - "[`Type`](/docs/concept-api/type?tab=python#type-methods) object"

  - method:
    common: &method-attributes
      title: Retrieve attributes
      description: Retrieves attributes that the instances of this type are allowed to own.
    java:
      <<: *method-attributes
      method: type.attributes();
      returns:
        - "Stream of [`AttributeType`](/docs/concept-api/type?tab=java#attributetype-methods) objects"
    javascript:
      <<: *method-attributes
      method: await type.attributes();
      returns:
        - "Iterator of [`AttributeType`](/docs/concept-api/type?tab=javascript#attributetype-methods) objects"
    python:
      <<: *method-attributes
      method: type.attributes()
      returns:
        - "Iterator of [`AttributeType`](/docs/concept-api/type?tab=python#attributetype-methods) objects"

  - method:
    common: &method-has
      title: Add attribute
      description: Allows the instances of this type to own the given `AttributeType`.
      accepts:
        param: &accepts-has-attributeType
          description: The AttributeType to be owned by the instances of this type.
          required: true
          default: N/A
    java:
      <<: *method-has
      method: type.has(AttributeType attributeType);
      accepts:
        param:
          <<: *accepts-has-attributeType
          name: attributeType
          type: "[`AttributeType`](/docs/concept-api/type?tab=java#attributetype-methods)"
      returns:
        - "[`Type`](/docs/concept-api/type?tab=java#type-methods) object"
    javascript:
      <<: *method-has
      method: await type.has(attributeType);
      accepts:
        param:
          <<: *accepts-has-attributeType
          name: attributeType
          type: "[`AttributeType`](/docs/concept-api/type?tab=javascript#attributetype-methods)"
      returns:
        - "`void`"
    python:
      <<: *method-has
      method: type.has(attribute_type)
      accepts:
        param:
          <<: *accepts-has-attributeType
          name: attribute_type
          type: "[`AttributeType`](/docs/concept-api/type?tab=python#attributetype-methods)"
      returns:
        - "[`Type`](/docs/concept-api/type?tab=python#type-methods) object"

  - method:
    common: &method-unhas
      title: Remove attribute
      description: Disallows the instances of this type from owning the given `AttributeType`.
      accepts:
        param: &accepts-unhas-attributeType
          description: The AttributeType to not be owend by the type.
          required: true
          default: N/A
    java:
      <<: *method-unhas
      method: type.unhas(AttributeType attributeType);
      accepts:
        param:
          <<: *accepts-unhas-attributeType
          name: attributeType
          type: "[`AttributeType`](/docs/concept-api/type?tab=java#attributetype-methods)"
      returns:
        - "[`Type`](/docs/concept-api/type?tab=java#type-methods) object"
    javascript:
      <<: *method-unhas
      method: await type.unhas(attributeType);
      accepts:
        param:
          <<: *accepts-unhas-attributeType
          name: attributeType
          type: "[`AttributeType`](/docs/concept-api/type?tab=javascript#attributetype-methods)"
      returns:
        - "`void`"
    python:
      <<: *method-unhas
      method: type.unhas(attribute_type)
      accepts:
        param:
          <<: *accepts-unhas-attributeType
          name: attribute_type
          type: "[`AttributeType`](/docs/concept-api/type?tab=python#attributetype-methods)"
      returns:
        - "[`Type`](/docs/concept-api/type?tab=python#type-methods) object"

  - method:
    common: &method-keys
      title: Retrieve keys
      descriotion: Retrieves keys that the instances of this type are allowed to own.
    java:
      <<: *method-keys
      method: type.keys();
      returns:
        - "Stream of [`AttributeType`](/docs/concept-api/type?tab=java#attributetype-methods) objects"
    javascript:
      <<: *method-keys
      method: await type.keys();
      returns:
        - "Iterator of [`AttributeType`](/docs/concept-api/type?tab=javascript#attributetype-methods) objects"
    python:
      <<: *method-keys
      method: type.keys()
      returns:
        - "Iterator of [`AttributeType`](/docs/concept-api/type?tab=python#attributetype-methods) objects"
  - method:
    common: &method-key
      title: Add key
      description: Allows the instances of this type to own the given AttributeType as their key.
      accepts:
        param: &accepts-key-key
          name: key
          description: The AttributeType to be owned by the instances of this type as their key.
          required: true
          default: N/A
    java:
      <<: *method-key
      method: type.key(AttributeType attributeType);
      accepts:
        param:
          <<: *accepts-key-key
          type: "[`AttributeType`](/docs/concept-api/type?tab=java#attributetype-methods)"
      returns:
        - "[`Type`](/docs/concept-api/type?tab=java#type-methods) object"
    javascript:
      <<: *method-key
      method: await type.key(attributeType);
      accepts:
        param:
          <<: *accepts-key-key
          type: "[`AttributeType`](/docs/concept-api/type?tab=javascript#attributetype-methods)"
      returns:
        - "`void`"
    python:
      <<: *method-key
      method: type.key(attributeType)
      accepts:
        param:
          <<: *accepts-key-key
          type: "[`AttributeType`](/docs/concept-api/type?tab=python#attributetype-methods)"
      returns:
        - "[`Type`](/docs/concept-api/type?tab=python#type-methods) object"

  - method:
    common: &method-unkey
      title: Remove key
      description: Disallows the instances of this type from owning the given AttributeType as its key.
      accepts:
        param: &accepts-unkey-attributeType
          description: the AttributeType to not be owend by the instances of this type as their key.
          required: true
          default: N/A
    java:
      <<: *method-unkey
      method: type.unkey(AttributeType key);
      accepts:
        param:
          <<: *accepts-unkey-attributeType
          name: attributeType
          type: "[`AttributeType`](/docs/concept-api/type?tab=java#attributetype-methods)"
      returns:
        - "[`Type`](/docs/concept-api/type?tab=java#type-methods) object"
    javascript:
      <<: *method-unkey
      method: await type.unkey(attributeType);
      accepts:
        param:
          <<: *accepts-unkey-attributeType
          name: attributeType
          type: "[`AttributeType`](/docs/concept-api/type?tab=javascript#attributetype-methods)"
      returns:
        - "`void`"
    python:
      <<: *method-unkey
      method: type.unkey(attribute_type)
      accepts:
        param:
          <<: *accepts-unkey-attributeType
          name: attribute_type
          type: "[`AttributeType`](/docs/concept-api/type?tab=python#attributetype-methods)"
      returns:
        - "[`Type`](/docs/concept-api/type?tab=python#type-methods) object"

  - method:
    common: &method-instances
      title: Retrieve instances
      descriptions: Retrieve all instances of this type.
    java:
      <<: *method-instances
      method: type.instances();
      returns:
        - "Stream of [`Thing`](../04-concept-api/04-thing?tab=java.md) objects"
    javascript:
      <<: *method-instances
      method: await type.instances();
      returns:
        - "Iterator of [`Thing`](../04-concept-api/04-thing?tab=javascript.md) objects"
    python:
      <<: *method-instances
      method: type.instances()
      returns:
        - "Iterator of [`Thing`](../04-concept-api/04-thing?tab=python.md) objects"